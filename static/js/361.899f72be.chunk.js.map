{"version":3,"file":"static/js/361.899f72be.chunk.js","mappings":"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","sources":["components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.js","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const MovieContainer = styled.div`\n  margin-bottom: 30px;\n  @media only screen and (min-width: 768px) {\n    display: flex;\n    gap: 20px;\n  }\n`;\n\nexport const Image = styled.img`\n  @media only screen and (max-width: 767px) {\n    margin-bottom: 32px;\n  }\n`;\n\nexport const Title = styled.h2`\n  color: white;\n  font-size: 34px;\n  @media only screen and (min-width: 1200px) {\n    font-size: 40px;\n  }\n  margin-bottom: 10px;\n  @media only screen and (min-width: 1200px) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const ReleaseDate = styled.p`\n  color: #b3b6b7;\n  margin-bottom: 10px;\n  @media only screen and (min-width: 1200px) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const UserScore = styled.p`\n  color: #b3b6b7;\n  margin-bottom: 10px;\n  @media only screen and (min-width: 1200px) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const OverwievCard = styled.div`\n  color: #b3b6b7;\n  margin-bottom: 10px;\n  @media only screen and (min-width: 1200px) {\n    margin-bottom: 20px;\n  }\n  @media only screen and (min-width: 768px) {\n    width: 370px;\n  }\n  @media only screen and (min-width: 1200px) {\n    width: 100%;\n  }\n`;\n\nexport const OverwievTitle = styled.p`\n  font-size: 24px;\n  color: white;\n  font-weight: 700;\n  margin-bottom: 4px;\n`;\n\nexport const GenresCard = styled.div`\n  margin-bottom: 10px;\n  @media only screen and (min-width: 1200px) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const GenresTitle = styled.p`\n  font-size: 24px;\n  color: white;\n  font-weight: 700;\n  margin-bottom: 4px;\n`;\n\nexport const GenresList = styled.ul`\n  color: #b3b6b7;\n  display: flex;\n  gap: 10px;\n`;\n\nexport const AdditionalInfoCard = styled.div`\n  color: #b3b6b7;\n`;\n\nexport const SubTitle = styled.p`\n  font-size: 24px;\n  color: white;\n  font-weight: 700;\n  margin-bottom: 10px;\n`;\n\nexport const AdditionalList = styled.ul`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const ListItem = styled.li`\n  color: #1e90ff;\n`;\n\nexport const NavLinkStyled = styled(NavLink)`\n  color: inherit;\n  display: inline-block;\n  &:hover,\n  :focus {\n    transform: scale(1.05);\n  }\n  &.active {\n    color: orange;\n  }\n`;\n","import React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport {\n  Title,\n  GenresList,\n  GenresTitle,\n  ListItem,\n  MovieContainer,\n  OverwievCard,\n  OverwievTitle,\n  SubTitle,\n  UserScore,\n  AdditionalInfoCard,\n  GenresCard,\n  NavLinkStyled,\n  Image,\n  ReleaseDate,\n  AdditionalList,\n} from './MovieInfo.styled';\n\nconst defaultPoster =\n  'https://th.bing.com/th/id/OIP.Lr_j_PgqTGzKxJTeIwajVwHaLH?pid=ImgDet&rs=1';\nconst BASE_URL_IMG = 'https://image.tmdb.org/t/p/w500';\n\nexport const MovieInfo = ({\n  movie: { poster_path, vote_average, overview, title, genres, release_date },\n  movieId,\n}) => {\n  return (\n    <React.Fragment>\n      <MovieContainer>\n        <Image\n          src={poster_path ? `${BASE_URL_IMG}${poster_path}` : defaultPoster}\n          style={{ width: '345px', height: '517px' }}\n          alt={title}\n        />\n        <div>\n          <Title>{title}</Title>\n          <ReleaseDate>Release date: {release_date}</ReleaseDate>\n          <UserScore>User Score: {Math.round(vote_average * 10)}%</UserScore>\n          <OverwievCard>\n            <OverwievTitle>Overview</OverwievTitle>\n            <p>{overview}</p>\n          </OverwievCard>\n          <GenresCard>\n            <GenresTitle> Genres</GenresTitle>\n            <GenresList>\n              {genres.map(({ name }) => (\n                <li key={name}>{name}</li>\n              ))}\n            </GenresList>\n          </GenresCard>\n          <AdditionalInfoCard>\n            <SubTitle>Additional information</SubTitle>\n            <AdditionalList>\n              <ListItem>\n                <NavLinkStyled to={`/movies/${movieId}/cast`}>\n                  Cast\n                </NavLinkStyled>\n              </ListItem>\n              <ListItem>\n                <NavLinkStyled to={`/movies/${movieId}/reviews`}>\n                  Reviews\n                </NavLinkStyled>\n              </ListItem>\n            </AdditionalList>\n          </AdditionalInfoCard>\n        </div>\n      </MovieContainer>\n      <Outlet />\n    </React.Fragment>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport BeatLoader from 'react-spinners/BeatLoader';\n\nexport const StyledLink = styled(Link)`\n  display: flex;\n  gap: 2px;\n  align-items: center;\n  text-decoration: none;\n  font-size: 20px;\n  margin-bottom: 20px;\n  color: white;\n`;\n\nexport const BeatLoaderStyled = styled(BeatLoader)`\n  text-align: center;\n`;\n","import { useLocation, useParams } from 'react-router-dom';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { serviceMovieDetails } from 'api';\nimport { Error } from 'components/Error.styled';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { ImArrowLeft } from 'react-icons/im';\nimport { BeatLoaderStyled, StyledLink } from './MovieDetails.styled';\n\nexport default function MovieDetails() {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  const location = useLocation();\n  const backLinkocationRef = useRef(location.state?.from ?? '/');\n\n  useEffect(() => {\n    async function getMovie() {\n      try {\n        setError(false);\n        setLoading(true);\n        const data = await serviceMovieDetails(movieId);\n        console.log(data);\n        setMovie(data);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getMovie();\n  }, [movieId]);\n\n  return (\n    <React.Fragment>\n      <StyledLink to={backLinkocationRef.current}>\n        <ImArrowLeft />\n        Go back\n      </StyledLink>\n      {loading && <BeatLoaderStyled color=\"#36d7b7\" />}\n      {error && <Error>Error... Please reload the page!</Error>}\n      {movie && <MovieInfo movie={movie} movieId={movieId} />}\n    </React.Fragment>\n  );\n}\n"],"names":["MovieContainer","styled","_templateObject","_taggedTemplateLiteral","Image","_templateObject2","Title","_templateObject3","ReleaseDate","_templateObject4","UserScore","_templateObject5","OverwievCard","_templateObject6","OverwievTitle","_templateObject7","GenresCard","_templateObject8","GenresTitle","_templateObject9","GenresList","_templateObject10","AdditionalInfoCard","_templateObject11","SubTitle","_templateObject12","AdditionalList","_templateObject13","ListItem","_templateObject14","NavLinkStyled","NavLink","_templateObject15","MovieInfo","_ref","_ref$movie","movie","poster_path","vote_average","overview","title","genres","release_date","movieId","_jsxs","React","children","_jsx","src","concat","style","width","height","alt","Math","round","map","_ref2","name","to","Outlet","StyledLink","Link","BeatLoaderStyled","BeatLoader","MovieDetails","_location$state$from","_location$state","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","_useState5","_useState6","setMovie","useParams","location","useLocation","backLinkocationRef","useRef","state","from","useEffect","_getMovie","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","serviceMovieDetails","sent","console","log","t0","finish","stop","apply","arguments","getMovie","current","ImArrowLeft","color","Error"],"sourceRoot":""}