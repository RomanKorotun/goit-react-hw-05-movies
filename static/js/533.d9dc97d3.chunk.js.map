{"version":3,"file":"static/js/533.d9dc97d3.chunk.js","mappings":"uQAEaA,EAAe,SAAHC,GAA0B,IAApBC,EAAYD,EAAZC,aACvBC,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,KAAA,MAAAC,SACGJ,EAAaK,KAAI,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAOC,EAAEF,EAAFE,GAAE,OAC5BL,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACM,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaH,GAAMI,MAAO,CAAEC,KAAMZ,GAAWG,SAClDG,KAFIC,EAIJ,KAIb,E,oCCPe,SAASM,IAAU,IAADC,EAC/BC,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA0BL,EAAAA,EAAAA,YAAUM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA7BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAwCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA7C1B,EAAY2B,EAAA,GAAEC,EAAeD,EAAA,GAEpCE,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAZ,EAAAA,EAAAA,GAAAU,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BG,EAAsC,QAA5BnB,EAAGiB,EAAaG,IAAI,gBAAQ,IAAApB,EAAAA,EAAI,GAyBhD,OAnBAqB,EAAAA,EAAAA,YAAU,WAIgB,SAAAC,IAWvB,OAXuBA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAxB,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGqB,OAHrBF,EAAAC,KAAA,EAEIlB,GAAS,GACTJ,GAAW,GAAMqB,EAAAE,KAAA,GACEC,EAAAA,EAAAA,IAAoBX,GAAY,KAAD,EAA5CO,EAAIC,EAAAI,KACVlB,EAAgBa,EAAKM,SAASL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAE9BjB,GAAS,GAAM,QAEG,OAFHiB,EAAAC,KAAA,GAEftB,GAAW,GAAOqB,EAAAO,OAAA,6BAAAP,EAAAQ,OAAA,GAAAV,EAAA,yBAErBW,MAAA,KAAAC,UAAA,CAdkB,KAAflB,GAEH,WACuBG,EAAAc,MAAC,KAADC,UAAA,CAYxBC,EACF,GAAG,CAACnB,KAGF/B,EAAAA,EAAAA,KAACmD,EAAAA,GAAW,CAAAlD,UACVmD,EAAAA,EAAAA,MAACC,EAAAA,GAAS,CAAApD,SAAA,EACRmD,EAAAA,EAAAA,MAAA,QACEE,SAAU,SAAAC,GACRA,EAAIC,iBACJ,IA7BOC,EA6BCC,EAAgBH,EAAII,OAAOC,SAA3BF,YA7BDD,EA8BEC,EAAYG,MA7B7B/B,EAAgB,CAAEgC,MAAOL,IA8BjBF,EAAII,OAAOI,OACb,EAAE9D,SAAA,EAEFD,EAAAA,EAAAA,KAAA,SAAOgE,KAAK,cAAcC,KAAK,UAC/BjE,EAAAA,EAAAA,KAAA,UAAQiE,KAAK,SAAQhE,SAAC,cAEvBgB,IAAWjB,EAAAA,EAAAA,KAACkE,IAAU,CAACC,MAAM,YAC7B9C,IAASrB,EAAAA,EAAAA,KAACoE,EAAAA,EAAK,CAAAnE,SAAC,qCAChBJ,EAAawE,OAAS,IACrBrE,EAAAA,EAAAA,KAACL,EAAY,CAACE,aAAcA,QAKtC,C","sources":["components/SearchMovies/SearchMovies.js","pages/Movies.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const SearchMovies = ({ searchMovies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {searchMovies.map(({ title, id }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { serviceSearchMovies } from 'api';\nimport { SearchMovies } from 'components/SearchMovies/SearchMovies';\nimport BeatLoader from 'react-spinners/BeatLoader';\nimport { Error } from 'components/Error.styled';\nimport { Container, MainSection } from 'components/Layout/Layout.stylled';\nimport { useSearchParams } from 'react-router-dom';\n\nexport default function Movies() {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n  const [searchMovies, setSearchMovies] = useState([]);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryValue = searchParams.get('query') ?? '';\n\n  const onSubmit = inputValue => {\n    setSearchParams({ query: inputValue });\n  };\n\n  useEffect(() => {\n    if (queryValue === '') {\n      return;\n    }\n    async function getMovies() {\n      try {\n        setError(false);\n        setLoading(true);\n        const data = await serviceSearchMovies(queryValue);\n        setSearchMovies(data.results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getMovies();\n  }, [queryValue]);\n\n  return (\n    <MainSection>\n      <Container>\n        <form\n          onSubmit={evt => {\n            evt.preventDefault();\n            const { searchQuery } = evt.target.elements;\n            onSubmit(searchQuery.value);\n            evt.target.reset();\n          }}\n        >\n          <input name=\"searchQuery\" type=\"text\" />\n          <button type=\"submit\">Search</button>\n        </form>\n        {loading && <BeatLoader color=\"#36d7b7\" />}\n        {error && <Error>Error... Please reload the page!</Error>}\n        {searchMovies.length > 0 && (\n          <SearchMovies searchMovies={searchMovies} />\n        )}\n      </Container>\n    </MainSection>\n  );\n}\n"],"names":["SearchMovies","_ref","searchMovies","location","useLocation","_jsx","children","map","_ref2","title","id","Link","to","concat","state","from","Movies","_searchParams$get","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","_useState5","_useState6","setSearchMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","queryValue","get","useEffect","_getMovies","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","serviceSearchMovies","sent","results","t0","finish","stop","apply","arguments","getMovies","MainSection","_jsxs","Container","onSubmit","evt","preventDefault","inputValue","searchQuery","target","elements","value","query","reset","name","type","BeatLoader","color","Error","length"],"sourceRoot":""}