{"version":3,"file":"static/js/526.396cff69.chunk.js","mappings":"0NAEaA,EAAOC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kHAQhBC,EAAOH,EAAAA,GAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,oZ,SCFhBG,EAAa,SAAHC,GAAwB,IAAlBC,EAAUD,EAAVC,WACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,SAAc,CAAAC,UACbF,EAAAA,EAAAA,KAACX,EAAI,CAAAa,SACFL,EAAWM,KAAI,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAOC,EAAEF,EAAFE,GAAIC,EAAWH,EAAXG,YAAW,OACvCP,EAAAA,EAAAA,KAACP,EAAI,CAAAS,UACHF,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAE,WAAAC,OAAaJ,GAAMK,MAAO,CAAEC,KAAMd,GAAWI,UACnDF,EAAAA,EAAAA,KAAA,OACEa,IACEN,EAAW,GAAAG,OAZR,mCAY0BA,OAAGH,GAbhD,2EAecO,IAAKT,OANAC,EASJ,OAKjB,C,qKCzBaS,EAAQzB,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8FAOjBwB,GAAmB1B,EAAAA,EAAAA,IAAO2B,IAAP3B,CAAkBI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,iC,2BCHnC,SAAS0B,IACtB,IAAAC,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAC1BI,GAA0BL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAlCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAAoCT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAzChC,EAAUiC,EAAA,GAAEC,EAAaD,EAAA,GAmBhC,OAjBAE,EAAAA,EAAAA,YAAU,WACgB,SAAAC,IAYvB,OAZuBA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAxB,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGqB,OAHrBF,EAAAC,KAAA,EAEIX,GAAS,GACTJ,GAAW,GAAMc,EAAAE,KAAA,GACEC,EAAAA,EAAAA,MAAwB,KAAD,EAApCJ,EAAIC,EAAAI,KAEVX,EAAcM,EAAKM,SAASL,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAM,GAAAN,EAAA,SAE5BV,GAAS,GAAM,QAEG,OAFHU,EAAAC,KAAA,GAEff,GAAW,GAAOc,EAAAO,OAAA,6BAAAP,EAAAQ,OAAA,GAAAV,EAAA,yBAErBW,MAAA,KAAAC,UAAA,EAbc,WACSf,EAAAc,MAAC,KAADC,UAAA,CAaxBC,EACF,GAAG,KAGDC,EAAAA,EAAAA,MAACjD,EAAAA,SAAc,CAAAC,SAAA,CACZqB,IAAWvB,EAAAA,EAAAA,KAACgB,EAAgB,CAACmC,MAAM,YACnCxB,IAAS3B,EAAAA,EAAAA,KAACoD,EAAAA,EAAK,CAAAlD,SAAC,qCAChBL,EAAWwD,OAAS,IACnBH,EAAAA,EAAAA,MAAAI,EAAAA,SAAA,CAAApD,SAAA,EACEF,EAAAA,EAAAA,KAACe,EAAK,CAAAb,SAAC,qBACPF,EAAAA,EAAAA,KAACL,EAAAA,EAAU,CAACE,WAAYA,SAKlC,C","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.js","pages/Home/Home.styled.js","pages/Home/Home.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 15px;\n  margin-bottom: 30px;\n`;\n\nexport const Item = styled.li`\n  border-radius: 5px;\n  overflow: hidden;\n  transition: transform 250ms, box-shadow 250ms;\n  &:hover,\n  :focus {\n    box-shadow: 1px 1px 10px 8px black;\n    transform: scale(1.02);\n  }\n\n  @media only screen and (min-width: 768px) {\n    flex-basis: calc((100% - 2 * 15px) / 3);\n  }\n\n  @media only screen and (min-width: 1200px) {\n    flex-basis: calc((100% - 3 * 15px) / 4);\n  }\n`;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Item, List } from './MoviesList.styled';\n\nconst defaultPoster =\n  'https://th.bing.com/th/id/OIP.Lr_j_PgqTGzKxJTeIwajVwHaLH?pid=ImgDet&rs=1';\nconst BASE_URL_IMG = 'https://image.tmdb.org/t/p/w500';\n\nexport const MoviesList = ({ moviesList }) => {\n  const location = useLocation();\n  return (\n    <React.Fragment>\n      <List>\n        {moviesList.map(({ title, id, poster_path }) => (\n          <Item key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <img\n                src={\n                  poster_path ? `${BASE_URL_IMG}${poster_path}` : defaultPoster\n                }\n                alt={title}\n              />\n            </Link>\n          </Item>\n        ))}\n      </List>\n    </React.Fragment>\n  );\n};\n","import styled from 'styled-components';\nimport BeatLoader from 'react-spinners/BeatLoader';\n\nexport const Title = styled.h1`\n  color: white;\n  margin-bottom: 50px;\n  text-align: center;\n  font-size: 50px;\n`;\n\nexport const BeatLoaderStyled = styled(BeatLoader)`\n  text-align: center;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { serviceTrandingMovies } from 'api';\nimport { BeatLoaderStyled } from './Home.styled';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Error } from 'components/Error.styled';\nimport { Title } from './Home.styled';\n\nexport default function Home() {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [moviesList, setMoviesList] = useState([]);\n\n  useEffect(() => {\n    async function getMovies() {\n      try {\n        setError(false);\n        setLoading(true);\n        const data = await serviceTrandingMovies();\n\n        setMoviesList(data.results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    }\n    getMovies();\n  }, []);\n\n  return (\n    <React.Fragment>\n      {loading && <BeatLoaderStyled color=\"#36d7b7\" />}\n      {error && <Error>Error... Please reload the page!</Error>}\n      {moviesList.length > 1 && (\n        <>\n          <Title>Trending Movies</Title>\n          <MoviesList moviesList={moviesList} />\n        </>\n      )}\n    </React.Fragment>\n  );\n}\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","MoviesList","_ref","moviesList","location","useLocation","_jsx","React","children","map","_ref2","title","id","poster_path","Link","to","concat","state","from","src","alt","Title","BeatLoaderStyled","BeatLoader","Home","_useState","useState","_useState2","_slicedToArray","loading","setLoading","_useState3","_useState4","error","setError","_useState5","_useState6","setMoviesList","useEffect","_getMovies","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","serviceTrandingMovies","sent","results","t0","finish","stop","apply","arguments","getMovies","_jsxs","color","Error","length","_Fragment"],"sourceRoot":""}